import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the formingMagicSquare function below.
    static int formingMagicSquare(int[][] s) {
     
       int[] a=new int[]{0,0,0,0,0,0,0,0,0};
       int t=0;
       for(int i=0;i<3;i++){
           for(int j=0;j<3;j++){
               a[t]=s[i][j];
               t++;
           }
       }
         
        int[] a1 = {4, 9, 2, 3, 5, 7, 8, 1, 6};
        int[] a2 = {2, 9, 4, 7, 5, 3, 6, 1, 8};
        int[] a3 = {6, 1, 8, 7, 5, 3, 2, 9, 4};
        int[] a4 = {8, 3, 4, 1, 5, 9, 6, 7, 2};
        int[] a5 = {2, 7, 6, 9, 5, 1, 4, 3, 8};
        int[] a6 = {6, 7, 2, 1, 5, 9, 8, 3, 4};
        int[] a7 = {8, 1, 6, 3, 5, 7, 4, 9, 2};
        int[] a8 = {4, 3, 8, 9, 5, 1, 2, 7, 6};
        int result = 1000; 
        int[] ii=new int[]{0,0,0,0,0,0,0,0};
        for (int i = 0; i < 9; i++){
             
            ii[0] += (int) Math.abs(a[i]-a1[i]);
            ii[1] += (int) Math.abs(a[i]-a2[i]);
            ii[2] += (int) Math.abs(a[i]-a3[i]);
            ii[3] += (int) Math.abs(a[i]-a4[i]);
            ii[4] += (int) Math.abs(a[i]-a5[i]);
            ii[5] += (int) Math.abs(a[i]-a6[i]);
            ii[6] += (int) Math.abs(a[i]-a7[i]);
            ii[7] += (int) Math.abs(a[i]-a8[i]);
        }
       for(int i=0;i<8;i++){
           if(ii[i]<result){
               result=ii[i];
           }
       }
      return result;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int[][] s = new int[3][3];

        for (int i = 0; i < 3; i++) {
            String[] sRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 3; j++) {
                int sItem = Integer.parseInt(sRowItems[j]);
                s[i][j] = sItem;
            }
        }

        int result = formingMagicSquare(s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
 
